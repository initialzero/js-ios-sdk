<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/RKMappingOperation.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/RKMappingOperation</TokenIdentifier>
			<Abstract type="html">Instances of RKMappingOperation perform transformation between object representations according to the rules expressed in RKObjectMapping objects. Mapping operations provide the foundation for the RestKit object mapping engine and perform the work of inspecting the attributes and relationships of a source object and determining how to map them into new representations on a destination object.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
            
			
			<NodeRef refid="71"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/initWithSourceObject:destinationObject:mapping:</TokenIdentifier>
			<Abstract type="html">Initializes the receiver with a source object, a destination object and an object mapping with which to perform an object mapping.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithSourceObject:(id)sourceObject destinationObject:(id)destinationObject mapping:(RKMapping *)objectOrDynamicMapping</Declaration>
			<Parameters>
				<Parameter>
					<Name>sourceObject</Name>
					<Abstract type="html">The source object to be mapped. Cannot be nil.</Abstract>
				</Parameter><Parameter>
					<Name>destinationObject</Name>
					<Abstract type="html">The destination object the results are to be mapped onto. May be nil, in which case a new object target object will be obtained from the dataSource.</Abstract>
				</Parameter><Parameter>
					<Name>objectOrDynamicMapping</Name>
					<Abstract type="html">An instance of RKObjectMapping or RKDynamicMapping defining how the mapping is to be performed.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The receiver, initialized with a source object, a destination object, and a mapping.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithSourceObject:destinationObject:mapping:</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/initWithSourceObject:destinationObject:mapping:metadataList:</TokenIdentifier>
			<Abstract type="html">Initializes the receiver with a source object, a destination object and an object mapping with which to perform an object mapping, and metadata information to be made available to the mapping.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithSourceObject:(id)sourceObject destinationObject:(id)destinationObject mapping:(RKMapping *)objectOrDynamicMapping metadataList:(NSArray *)metadataList</Declaration>
			<Parameters>
				<Parameter>
					<Name>sourceObject</Name>
					<Abstract type="html">The source object to be mapped. Cannot be nil.</Abstract>
				</Parameter><Parameter>
					<Name>destinationObject</Name>
					<Abstract type="html">The destination object the results are to be mapped onto. May be nil, in which case a new object target object will be obtained from the dataSource.</Abstract>
				</Parameter><Parameter>
					<Name>objectOrDynamicMapping</Name>
					<Abstract type="html">An instance of RKObjectMapping or RKDynamicMapping defining how the mapping is to be performed.</Abstract>
				</Parameter><Parameter>
					<Name>metadataList</Name>
					<Abstract type="html">A list of objects (usually dictionaries) which provide metadata to the operation, available via the @metadata key in mapping paths.  Each object should respond to -valueForKeyPath:, and return nil if the requested key path is not represented in the object (in which case the following object in the list will be consulted).</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The receiver, initialized with a source object, a destination object, and a mapping.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithSourceObject:destinationObject:mapping:metadataList:</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/setSourceObject:</TokenIdentifier>
			<Abstract type="html">A dictionary of mappable elements containing simple values or nested object structures.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) id sourceObject</Declaration>
			
			
			<Anchor>//api/name/sourceObject</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/sourceObject</TokenIdentifier>
			<Abstract type="html">A dictionary of mappable elements containing simple values or nested object structures.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) id sourceObject</Declaration>
			
			
			<Anchor>//api/name/sourceObject</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKMappingOperation/sourceObject</TokenIdentifier>
			<Abstract type="html">A dictionary of mappable elements containing simple values or nested object structures.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) id sourceObject</Declaration>
			
			
			<Anchor>//api/name/sourceObject</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/setDestinationObject:</TokenIdentifier>
			<Abstract type="html">The target object for this operation. Mappable values in the source object will be applied to the destination object using key-value coding.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) id destinationObject</Declaration>
			
			
			<Anchor>//api/name/destinationObject</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/destinationObject</TokenIdentifier>
			<Abstract type="html">The target object for this operation. Mappable values in the source object will be applied to the destination object using key-value coding.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) id destinationObject</Declaration>
			
			
			<Anchor>//api/name/destinationObject</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKMappingOperation/destinationObject</TokenIdentifier>
			<Abstract type="html">The target object for this operation. Mappable values in the source object will be applied to the destination object using key-value coding.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) id destinationObject</Declaration>
			
			
			<Anchor>//api/name/destinationObject</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/setNewDestinationObject:</TokenIdentifier>
			<Abstract type="html">Property which is YES when the destinationObject was provided from the data source, and NO when the destination object was provided externally to the operation.</Abstract>
			<DeclaredIn>RKMapperOperation.m</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, getter=isNewDestinationObject) BOOL newDestinationObject</Declaration>
			
			
			<Anchor>//api/name/newDestinationObject</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/isNewDestinationObject</TokenIdentifier>
			<Abstract type="html">Property which is YES when the destinationObject was provided from the data source, and NO when the destination object was provided externally to the operation.</Abstract>
			<DeclaredIn>RKMapperOperation.m</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, getter=isNewDestinationObject) BOOL newDestinationObject</Declaration>
			
			
			<Anchor>//api/name/newDestinationObject</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKMappingOperation/newDestinationObject</TokenIdentifier>
			<Abstract type="html">Property which is YES when the destinationObject was provided from the data source, and NO when the destination object was provided externally to the operation.</Abstract>
			<DeclaredIn>RKMapperOperation.m</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, getter=isNewDestinationObject) BOOL newDestinationObject</Declaration>
			
			
			<Anchor>//api/name/newDestinationObject</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/setMapping:</TokenIdentifier>
			<Abstract type="html">The mapping defining how values contained in the source object should be transformed to the destination object via key-value coding.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) RKMapping *mapping</Declaration>
			
			
			<Anchor>//api/name/mapping</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/mapping</TokenIdentifier>
			<Abstract type="html">The mapping defining how values contained in the source object should be transformed to the destination object via key-value coding.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) RKMapping *mapping</Declaration>
			
			
			<Anchor>//api/name/mapping</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKMappingOperation/mapping</TokenIdentifier>
			<Abstract type="html">The mapping defining how values contained in the source object should be transformed to the destination object via key-value coding.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) RKMapping *mapping</Declaration>
			
			
			<Anchor>//api/name/mapping</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/setObjectMapping:</TokenIdentifier>
			<Abstract type="html">The concrete object mapping for the operation.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) RKObjectMapping *objectMapping</Declaration>
			
			
			<Anchor>//api/name/objectMapping</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/objectMapping</TokenIdentifier>
			<Abstract type="html">The concrete object mapping for the operation.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) RKObjectMapping *objectMapping</Declaration>
			
			
			<Anchor>//api/name/objectMapping</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKMappingOperation/objectMapping</TokenIdentifier>
			<Abstract type="html">The concrete object mapping for the operation.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) RKObjectMapping *objectMapping</Declaration>
			
			
			<Anchor>//api/name/objectMapping</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/setMetadataList:</TokenIdentifier>
			<Abstract type="html">A list of metadata objects available for mapping in addition to the source object.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) NSArray *metadataList</Declaration>
			
			
			<Anchor>//api/name/metadataList</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/metadataList</TokenIdentifier>
			<Abstract type="html">A list of metadata objects available for mapping in addition to the source object.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) NSArray *metadataList</Declaration>
			
			
			<Anchor>//api/name/metadataList</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKMappingOperation/metadataList</TokenIdentifier>
			<Abstract type="html">A list of metadata objects available for mapping in addition to the source object.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) NSArray *metadataList</Declaration>
			
			
			<Anchor>//api/name/metadataList</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/setDelegate:</TokenIdentifier>
			<Abstract type="html">The delegate to inform of interesting events during the mapping operation lifecycle.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;RKMappingOperationDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/delegate</TokenIdentifier>
			<Abstract type="html">The delegate to inform of interesting events during the mapping operation lifecycle.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;RKMappingOperationDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKMappingOperation/delegate</TokenIdentifier>
			<Abstract type="html">The delegate to inform of interesting events during the mapping operation lifecycle.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;RKMappingOperationDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/setDataSource:</TokenIdentifier>
			<Abstract type="html">The data source is responsible for providing the mapping operation with an appropriate target object for mapping when the destinationObject is nil.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;RKMappingOperationDataSource&gt; dataSource</Declaration>
			
			
			<Anchor>//api/name/dataSource</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/dataSource</TokenIdentifier>
			<Abstract type="html">The data source is responsible for providing the mapping operation with an appropriate target object for mapping when the destinationObject is nil.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;RKMappingOperationDataSource&gt; dataSource</Declaration>
			
			
			<Anchor>//api/name/dataSource</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKMappingOperation/dataSource</TokenIdentifier>
			<Abstract type="html">The data source is responsible for providing the mapping operation with an appropriate target object for mapping when the destinationObject is nil.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;RKMappingOperationDataSource&gt; dataSource</Declaration>
			
			
			<Anchor>//api/name/dataSource</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/setError:</TokenIdentifier>
			<Abstract type="html">The error, if any, that occurred during the execution of the mapping operation.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) NSError *error</Declaration>
			
			
			<Anchor>//api/name/error</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/error</TokenIdentifier>
			<Abstract type="html">The error, if any, that occurred during the execution of the mapping operation.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) NSError *error</Declaration>
			
			
			<Anchor>//api/name/error</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKMappingOperation/error</TokenIdentifier>
			<Abstract type="html">The error, if any, that occurred during the execution of the mapping operation.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) NSError *error</Declaration>
			
			
			<Anchor>//api/name/error</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/setMappingInfo:</TokenIdentifier>
			<Abstract type="html">Returns a dictionary containing information about the mappings applied during the execution of the operation. The keys of the dictionary are key paths into the destinationObject for values that were mapped and the values are instances of RKMappingDetails that specify the object mapping and property mappings that were applied.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) RKMappingInfo *mappingInfo</Declaration>
			
			
			<Anchor>//api/name/mappingInfo</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/mappingInfo</TokenIdentifier>
			<Abstract type="html">Returns a dictionary containing information about the mappings applied during the execution of the operation. The keys of the dictionary are key paths into the destinationObject for values that were mapped and the values are instances of RKMappingDetails that specify the object mapping and property mappings that were applied.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) RKMappingInfo *mappingInfo</Declaration>
			
			
			<Anchor>//api/name/mappingInfo</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKMappingOperation/mappingInfo</TokenIdentifier>
			<Abstract type="html">Returns a dictionary containing information about the mappings applied during the execution of the operation. The keys of the dictionary are key paths into the destinationObject for values that were mapped and the values are instances of RKMappingDetails that specify the object mapping and property mappings that were applied.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) RKMappingInfo *mappingInfo</Declaration>
			
			
			<Anchor>//api/name/mappingInfo</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/setCancelled:</TokenIdentifier>
			<Abstract type="html">Property to indicate whether this operation has been cancelled or not.  It will be NO until cancel is called, after which it will return YES.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, getter=isCancelled) BOOL cancelled</Declaration>
			
			
			<Anchor>//api/name/cancelled</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/isCancelled</TokenIdentifier>
			<Abstract type="html">Property to indicate whether this operation has been cancelled or not.  It will be NO until cancel is called, after which it will return YES.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, getter=isCancelled) BOOL cancelled</Declaration>
			
			
			<Anchor>//api/name/cancelled</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RKMappingOperation/cancelled</TokenIdentifier>
			<Abstract type="html">Property to indicate whether this operation has been cancelled or not.  It will be NO until cancel is called, after which it will return YES.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly, getter=isCancelled) BOOL cancelled</Declaration>
			
			
			<Anchor>//api/name/cancelled</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/cancel</TokenIdentifier>
			<Abstract type="html">Cancels the operation, by setting the cancelled property to YES.  Various steps of the process check the cancelled property and will abort when it gets set.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>- (void)cancel</Declaration>
			
			
			<Anchor>//api/name/cancel</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/start</TokenIdentifier>
			<Abstract type="html">Process all mappable values from the mappable dictionary and assign them to the target object according to the rules expressed in the object mapping definition.  The error properties need to be checked to see if the operation was successful.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>- (void)start</Declaration>
			
			
			<Anchor>//api/name/start</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RKMappingOperation/performMapping:</TokenIdentifier>
			<Abstract type="html">Process all mappable values from the mappable dictionary and assign them to the target object according to the rules expressed in the object mapping definition.</Abstract>
			<DeclaredIn>RKMappingOperation.h</DeclaredIn>
			
			<Declaration>- (BOOL)performMapping:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>error</Name>
					<Abstract type="html">A pointer to an NSError reference to capture any error that occurs during the mapping. May be nil.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A Boolean value indicating if the mapping operation was successful.</Abstract></ReturnValue>
			<Anchor>//api/name/performMapping:</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
        
        
	</File>
</Tokens>